//We need to check this list by the function described below. If there is no contact having the firstname, say it.
//if the property doesn't exist, say it. If the both parameters exist, give the value of the property for a certain firstname.
var contacts = [
    {
        "firstName": "Akira",
        "lastName": "Laine",
        "number": "0543236543",
        "likes": ["Pizza", "Coding", "Brownie Points"]
    },
    {
        "firstName": "Harry",
        "lastName": "Potter",
        "number": "0994372684",
        "likes": ["Hogwarts", "Magic", "Hagrid"]
    },
    {
        "firstName": "Sherlock",
        "lastName": "Holmes",
        "number": "0487345643",
        "likes": ["Intriguing Cases", "Violin"]
    },
    {
        "firstName": "Kristian",
        "lastName": "Vos",
        "number": "unknown",
        "likes": ["Javascript", "Gaming", "Foxes"]
    }
];

function lookUpProfile(firstName, prop) {
// Only change code below this line
var first;
var property;

for (i=0; i<contacts.length;i++) { //Loop ok for firstName checking.
  if (contacts[i].firstName === firstName) { //If the firstname set in function param exists, we check for the property

          if (contacts[i].hasOwnProperty(prop)) { //If the property for the firstname exists
            property = contacts[i][prop]; //take the value of this property
            return property;
          } else {
            property = "No such property";
            return property;
          }

    } else if ((contacts.length-1) === i) { //if i at the end of the object and still no contact found...
        first="No such contact";
        return first;
      }
    }


// Only change code above this line
}

// Change these values to test your function
lookUpProfile("Akira", "lastName");

//Lesson learned: Not try to make separate loops and try to solve one test case at a time...  Solve the problem by global solution. 
